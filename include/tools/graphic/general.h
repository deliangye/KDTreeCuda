/***********************************************************************
* Software License Agreement (BSD License)
*
* Copyright 2017  Wolfgang Brandenburger. All rights reserved.
*
* THE BSD LICENSE
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
*
* 1. Redistributions of source code must retain the above copyright
*    notice, this list of conditions and the following disclaimer.
* 2. Redistributions in binary form must reproduce the above copyright
*    notice, this list of conditions and the following disclaimer in the
*    documentation and/or other materials provided with the distribution.
*
* THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*************************************************************************/


#ifndef GRAPHIC_GENERAL_H_
#define GRAPHIC_GENERAL_H_

#include "cuda.h"
#include "cuda_runtime.h"
#include "device_launch_parameters.h"

namespace graphic
{
	
#define HANDLE_ERROR( err ) (graphic::HandleError( err, __FILE__, __LINE__ ))
	
	/**
	* Returns the error code generated by cuda 
	*
	* @param err cuda error code
	* @param line line in source code
	*/
	static void HandleError(cudaError_t err, char* file_, int line_) {
		if (err != cudaSuccess) {
			std::cout << cudaGetErrorString(err) << " in " << file_ << " at line " << line_ << std::endl;
			exit(EXIT_FAILURE);
		}
	}

#define HANDLE_NULL( a ) {if (a == NULL) { \
							printf( "Host memory failed in %s at line %d\n", \
									__FILE__, __LINE__ ); \
							exit( EXIT_FAILURE );}}

	
}

#endif /* GRAPHIC_GENERAL_H_ */